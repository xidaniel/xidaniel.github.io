<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring Boot on Xi Wang</title>
    <link>https://algoxi.com/tags/spring-boot/</link>
    <description>Recent content in Spring Boot on Xi Wang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://algoxi.com/tags/spring-boot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>03 Spring Boot</title>
      <link>https://algoxi.com/p/03-spring-boot/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://algoxi.com/p/03-spring-boot/</guid>
      <description>Configuration File  There are two kind of file format can be used in Spring Boot  application.properties application.yml (recommended)     Why Need Config File  To modify defaule value which be initialized by Spring Boot.   YAML vs. XML vs. properties   There are three kind of configuration file type we usually.
  YAML
  server:prot:8081    XML
  &amp;lt;server&amp;gt; &amp;lt;prot&amp;gt;8081&amp;lt;/prot&amp;gt; &amp;lt;/server&amp;gt;     properties</description>
    </item>
    
    <item>
      <title>02 Spring Boot</title>
      <link>https://algoxi.com/p/02-spring-boot/</link>
      <pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://algoxi.com/p/02-spring-boot/</guid>
      <description>Start Project from Spring Initializer   Main file
 src/main/java/com.example/main    resources
 static: store static resources like js, css, images templates: store all templates files application.properties: config file, can modify some setting     “Project Structure” 
Main Function   This method aims to run the spring boot application
@SpringBootApplication public class HelloWorldApplication { public static void main(String[] args) { SpringApplication.run(HelloWorldApplication.class, args); } }   @SpringBootApplication</description>
    </item>
    
    <item>
      <title>01 Spring Boot</title>
      <link>https://algoxi.com/p/01-spring-boot/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://algoxi.com/p/01-spring-boot/</guid>
      <description>Spring Boot  Why?  Before: import packages + dependences + write config files + test development logic + deploy + &amp;hellip;.. Now: Spring Boot can simplify those workflow  Introduction    Spring Boot makes it easy to create stand-alone, production-grade Spring based Applications that you can &amp;ldquo;just run&amp;rdquo;.
   Spring Boot来简化Spring应用开发,去翻从简,产品级别应用.
  可以快速创建独立运行的Spring项目以及主流框架的集成
  J2EE开发的一站式解决方案
  与云计算天然集成
  Applyed in Microservices</description>
    </item>
    
    <item>
      <title>Movie Recommendation System</title>
      <link>https://algoxi.com/p/movie-recommendation-system/</link>
      <pubDate>Thu, 24 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://algoxi.com/p/movie-recommendation-system/</guid>
      <description>Data Flow: business system &amp;ndash;&amp;gt; log &amp;ndash;&amp;gt; flume collectiong, aggregating etc. &amp;ndash;&amp;gt; kafka streaming 数据清洗和处理 &amp;ndash;&amp;gt; spark streaming 流式计算
MongoDB Concepts: database / collection / document  show dbs use database name, access db local current database name show collections CRUD one to many structure  Elasticsearch vs. Solr  open http://localhost:9200 check collection http://localhost:9200/_cat/indices check index http://localhost:9200/recommender/_search?pretty 条件查询 curl &amp;ldquo;localhost:9200/recommender/_search?pretty&amp;rdquo; -d &amp;lsquo;{&amp;ldquo;query&amp;rdquo;: {&amp;ldquo;bool&amp;rdquo; : {&amp;ldquo;must&amp;rdquo; : {&amp;ldquo;exists&amp;rdquo; : {&amp;ldquo;field&amp;rdquo;: &amp;ldquo;tags&amp;rdquo;}}}}}&amp;rsquo;  SQL  count group by order distinct  Zookeeper  jps check all java process start: .</description>
    </item>
    
  </channel>
</rss>
